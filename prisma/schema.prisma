generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  cuid           String   @id @default(cuid())
  email          String   @unique
  user_role      String   @default("family")
  first_name     String   @default("")
  middle_name    String   @default("")
  last_name      String   @default("")
  phone          String   @default("")
  address        String   @default("")
  familyCuid     String?
  AdvocateFamily Family[] @relation("advocate_family")
  Pages          Page[]
  Family         Family?  @relation("family_member", fields: [familyCuid], references: [cuid])

  @@map("user_accounts")
}

model Family {
  cuid                  String           @id @default(cuid())
  family_name           String
  stripe_account_id     String?
  created_at            DateTime          
  updated_at            DateTime?
  advocateCuid          String           @map("advocate_cuid")
  FamilyDonationPayouts DonationPayout[]
  AdvocateResponsible   User             @relation("advocate_family", fields: [advocateCuid], references: [cuid])
  FamilyDonations       PageDonation[]
  Pages                 Page[]
  FamilyMembers         User[]           @relation("family_member")
}

model DonationPayout {
  cuid             String @id @default(cuid())
  familyCuid       String @map("familly_cuid")
  pageCuid         String @map("page_cuid")
  transaction_id   String @unique
  amount           Int    @default(0)
  distributionDate DateTime
  Family           Family @relation(fields: [familyCuid], references: [cuid])
  Page             Page   @relation(fields: [pageCuid], references: [cuid])
}

model Page {
  cuid                   String           @id @default(cuid())
  day_of_birth           DateTime?
  day_of_passing         DateTime?
  visitation_date        DateTime?
  visitation_location    String
  visitation_address     String           @default("")
  visitation_description String
  funeral_date           DateTime?
  funeral_location       String
  funeral_description    String
  funeral_address        String           @default("")
  obituary               String
  donation_goal          Int              @default(0)
  donation_description   String           @default("")
  amount_raised          Int              @default(0)
  deadline               DateTime?
  userCuid               String           @map("user_cuid")
  amount_distributed     Int              @default(0)
  profileImageCuid       String           @map("profile_image_cuid")
  familyCuid             String?          @map("family_cuid")
  status                 String           @default("active")
  donation_status        String           @default("in progress")
  duration               String           @default("0 days")
  start_date             DateTime          
  goal_met_date          DateTime?         
  page_first_name        String           @default("")
  page_last_name         String           @default("")
  last_donation_date     DateTime?         @default(now())
  DonationPayouts        DonationPayout[]
  Reply                  Reply[]
  Images                 Image[]
  PageDonations          PageDonation[]
  Family                 Family?          @relation(fields: [familyCuid], references: [cuid])
  User                   User             @relation(fields: [userCuid], references: [cuid])

  @@map("pages")
}

model PageDonation {
  cuid           String  @id @default(cuid())
  familyCuid     String  @map("family_cuid")
  pageCuid       String  @map("page_cuid")
  donorFirstName String  @default("")
  donorLastName  String  @default("")
  donorEmail     String  @default("")
  comments       String  @default("")
  isAnonymous    Boolean @default(false)
  success        Boolean @default(false)
  transaction_id String  @unique
  donationDate   String  @default("") //todo: change to ""  
  amount         Int     //In cents
  Family         Family  @relation(fields: [familyCuid], references: cuid)
  Page           Page    @relation(fields: [pageCuid], references: cuid)

  @@map("page_donations")
}

model CC_Token {
  cuid          String @id @default("0")
  token         String
  refresh_token String
  date          DateTime  @default(now())
}

model Reply {
  cuid       String   @id @default(cuid())
  pageCuid   String   @map("page_cuid")
  familyCuid String   @map("family_cuid")
  reply      String   @default("")
  name       String?  @default("")
  Page       Page     @relation(fields: [pageCuid], references: cuid)
  suspended  Boolean  @default(false)
  date       DateTime @default(now())
}

model Image {
  cuid     String  @id @default(cuid())
  url      String
  pageCuid String?
  Page     Page?   @relation(fields: [pageCuid], references: [cuid])

  @@unique([pageCuid, url])
  @@map("images")
}
